Gene and Minne are playing with the words. 
Minne is always sure that his word will be equal to the Genes word, 
after moving few letters of the Genes word to the end.
Help Minne to solve the problem.S

The first line of input contains the Genes word followed by Minne word. 
If it matches print true else print false


Sample Test Case - 1
input = abcde 
eabcd
output = true 


After performing the Genes word abcde-bcdea-cdeab-deabc-eabcd.


Sample Test Case - 2
input = abcdef
fedcba
output = false

Explanation -
After performing the Genes word  abcdef bcdefa cdefab defabc efabcd fabcde 
which doesnt match with the Minne word so the output is false 


import java.util.*;
class Test
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        String a=sc.next();
        String b=sc.next();
        int flag=0;
        if(a.length()==b.length())
        {
            if((a+a).indexOf(b)!=-1)
            {
                System.out.println("true");
            }
            else
            {
                System.out.println("false");
            }
        }
        else
        {
            System.out.println("false");
        }
    }
}

Mr. Bob is a Military Encoders. 
Mr. Bob writes a word as shown below and then merges them. 
Help Bob to write the code. 

Mr. Bob will be given a word 'w' and a number 'n' 

Sample Test Case - 1
input = 
ABCDE
2
output = ACEBD


This is How Bob writes the letters of the word 
A    C    E
   B    D

Now concatenate the two rows and ignore spaces in every row. We get ACEBD


Sample Test Case - 2
input = system
3
output = seytms


s         e
  y    t    m
     s

Now concatenate the 3 rows we get seytms


import java.util.*;
class s
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        String S=sc.next();
        int n=sc.nextInt();
        LinkedHashMap<Integer,String>m=new LinkedHashMap<>();
        int c=0,a=0;
        for(int i=0;i<S.length();i++)
        {
            if(!m.containsKey(c))
            {
               m.put(c,Character.toString(S.charAt(i))); 
            }
            else
            {
                m.put(c,m.get(c)+S.charAt(i));
            }
            if(c<n-1 && a==0)
            {
                c++;
            }
            else
            {
                a=1;
                c--;
                if(c==0)
                {
                    a=0;
                }
            }
        }
        for(Map.Entry<Integer,String>e:m.entrySet())
        {
            System.out.print(e.getValue());
        }
        
    }
}

Rahul works in a Water purifying plant.
His job is to pack the water bottles of  different sizes in a box.
He packed the water bottles in different boxes.
Each box may have different number of bottles and the count is printed on the box.

Rahul asked Suresh to send these bottles in a grid(0-indexed) where one box can be placed in one cell.

grid[i][j] represents the count printed on the box placed on cell (i,j)

Given a shift value 's' , Suresh has to shift the boxes 's' times in the grid.

In one shift , he can move:
   -grid[i][j] to grid[i][j+1]
   -grid[i][q-1] to grid[i+1][0]
   -grid[p-1][q-1] to grid[0][0].

Return the 2D-grid after shifting.


Input Format:
 -------------
 Line -1: 3 space seperated integers p , q and s represents number of rows ,number of columns and number of shifts..
 next p-Lines: q Space separated integers represents count printed on the box. 

Output Format:
 --------------
 Print a 2D array, 
  
Sample Input -1:
-------------
3 3 2
2 3 4
5 6 7
8 9 10
    
Sample Output -1:
--------------
9 10 2 
3 4 5 
6 7 8 
    
Explanation:
 -----------
As s=2, Every value is shifted forward 2 times.
grid[0][0]=2 is shifted to grid[0][2], grid[0][1]=3 is shifted to grid[1][0] and so on...

  
Sample Input-2:
-------------
4 5 3
1 2 3 4 5
6 7 8 9 10
11 12 13 14 15
5 4 2 3 1
    
Sample Output-2:
--------------
2 3 1 1 2 
3 4 5 6 7 
8 9 10 11 12 
13 14 15 5 4 


import java.util.*;
class Sample
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int m=sc.nextInt();
        int key=sc.nextInt();
        int a[]=new int[n*m];
         int b=n*m;
        for(int i=0;i<b;i++)
        {
            a[i]=sc.nextInt();
        }
        for(int i=b-key;i<b;i++)
        {
            System.out.print(a[i]+" ");
        }
        for(int i=0;i<b-key;i++)
        {
            if((i+key)%n!=0)
                 System.out.print(a[i]+" ");
            else
               System.out.println(a[i]+" ");
        }
    }
}